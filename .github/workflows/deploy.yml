name: Deploy to Cloud

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: evdb_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Run Backend Tests
      run: |
        cd ev-ecommerce/backend
        mvn test -Dspring.datasource.url=jdbc:postgresql://localhost:5432/evdb_test -Dspring.datasource.username=postgres -Dspring.datasource.password=postgres
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ev-ecommerce/frontend/ev-frontend/package-lock.json
    
    - name: Install Frontend Dependencies
      run: |
        cd ev-ecommerce/frontend/ev-frontend
        npm ci
    
    - name: Run Frontend Tests
      run: |
        cd ev-ecommerce/frontend/ev-frontend
        npm test -- --watchAll=false --coverage --passWithNoTests

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Backend Docker Image
      run: |
        cd ev-ecommerce/backend
        docker build -t ev-backend:${{ github.sha }} .
    
    - name: Build Frontend Docker Image
      run: |
        cd ev-ecommerce/frontend/ev-frontend
        docker build -t ev-frontend:${{ github.sha }} .
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Push Backend Image
      run: |
        docker tag ev-backend:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/ev-backend:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/ev-backend:latest
    
    - name: Push Frontend Image
      run: |
        docker tag ev-frontend:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/ev-frontend:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/ev-frontend:latest

  deploy-render:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Deploy to Render
      uses: johnbeynon/render-deploy-action@v1.0.0
      with:
        service-id: ${{ secrets.RENDER_SERVICE_ID }}
        api-key: ${{ secrets.RENDER_API_KEY }} 