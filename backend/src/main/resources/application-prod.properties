# Production Configuration
server.port=${PORT:8080}

# PostgreSQL Database Configuration (using environment variables)
# Handle both Render.com DATABASE_URL and individual components
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/evdb}
spring.datasource.username=${DB_USERNAME:postgreuser}
spring.datasource.password=${DB_PASSWORD:adiman05}
spring.datasource.driver-class-name=org.postgresql.Driver

# SSL Configuration for Render.com PostgreSQL
spring.datasource.hikari.ssl=true
spring.datasource.hikari.sslmode=require

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Connection pool settings (optimized for cloud)
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# Logging (minimal for production)
logging.level.com.evcommerce.backend=WARN
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=false
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=false

# CORS Configuration (allow all origins for production)
spring.web.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:https://ev-frontend.onrender.com,https://four413-project-group-d-6.onrender.com}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*

# Security headers
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true 